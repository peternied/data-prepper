# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Starts a data prepper release

on:
  workflow_dispatch:

jobs:
  r:
    runs-on: ubuntu-latest

    steps:
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Checkout Data-Prepper
      uses: actions/checkout@v2
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Upload Coverage Report
      uses: codecov/codecov-action@v1
    - name: Generate Javadocs
      run: ./gradlew javadoc

    ## Upload the build artifact to s3
    - name: Upload build artifacts
      uses: reggionick/s3-deploy@v3
      with:
        folder: data-prepper-core/build/libs
        bucket: ${{ secrets.S3_BUCKET }}
        bucket-region: ${{ secrets.S3_BUCKET_REGION }}
        delete-removed: false

    ## Create the docker image and upload it to data-prepper-staging, it houses continuous/nightly builds
    - name: Build the Docker image
      run: docker build . --file release/docker/Dockerfile --tag data-prepper:${{ VERSION }}

    ## Add the distribution manifest static file to the release artifacts
    - name: Upload Jars to release
      id: upload_release_jars
      uses: softprops/action-gh-release@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: data-prepper-core/build/libs/data-prepper-core-${{ VERSION }}.tar.gz
        asset_name: data-prepper-core-${{ VERSION }}.tar.gz
        asset_content_type: application/tar+gzip
    
    ## Create the distribution manifest that will be used
    - name: Create dist manifest
      run: | 
        echo "---" > manifest.yml
        echo "schema-version: '2.0'" >> manifest.yml
        echo "build:" >> manifest.yml
        echo "  - name: Data-Prepper" >> manifest.yml
        echo "    version: ${{ VERSION }}" >> manifest.yml
        echo "artifacts:" >> manifest.yml
        echo "  - location: https://${{ secrets.S3_BUCKET }}/data-prepper-core-${{ VERSION }}.tar.gz" >> manifest.yml
        echo "containers:" >> manifest.yml
        echo "  - type: docker" >> manifest.yml
        echo "    tag: data-prepper-staging/data-prepper:${{ VERSION }}" >> manifest.yml

    ## Note for above artifacts, no platform / architecture is included because the artifacts are multi-platform/architecture

    ## Create a pull request to commit the manifest version into the codebase
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        author: opensearch-ci-bot <opensearch-infra@amazon.com>
        commit-message: |
          Release manifest for ${{ VERSION }}.

          Signed-off-by: opensearch-ci-bot <opensearch-infra@amazon.com>
        delete-branch: true
        title: '[AUTO] Release manifest for ${{ VERSION }}.'
        body: |
          A release has been triggered with this manifest.